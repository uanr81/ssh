@node SSH-AGENT, SSH-ARGV0, SSH-ADD(1), Top
@chapter SSH-AGENT

@table @asis
@item NAME
     ssh-agent — агент аутентификации

@item SYNOPSIS
     ssh-agent [@ref{man_ssh_agent -c,, -c}| -s] [@ref{man_ssh_agent -D,, D}@ref{man_ssh_agent d,, d}] [@ref{man_ssh_agent -a bind_address,, -a bind_address}] [@ref{man_ssh_agent -E fingerprint_hash,, -E fingerprint_hash}]
               [@ref{man_ssh_agent -t life,, -t life}] [@ref{man_ssh_agent -P,, -P} pkcs11_whitelist] [command [arg ...]]
     ssh-agent [-c | @ref{man_ssh_agent -s,, -s}] @ref{man_ssh_agent -k,, -k}

@item DESCRIPTION
     ssh-agent - это программа для хранения закрытых ключей, используемая для
     аутентификации с открытым ключом (RSA, DSA, ECDSA, Ed25519). ssh-agent обычно
     запускается в начале сеанса X-session или входа в систему, а все остальные окна или
     программы запускаются как клиенты для программы ssh-agent. Благодаря использованию
     переменных среды агент может быть найден и автоматически использован для
     аутентификации при входе на другие машины с использованием ssh(1).

     У агента изначально нет закрытых ключей. Ключи добавляются с помощью ssh(1)
     (подробности см. В AddKeysToAgent в ssh_config(5)) или в ssh-add(1). Несколько
     идентификаторов могут храниться в ssh-agent одновременно, и ssh(1) будет автоматически
     использовать их, если они есть. ssh-add (1) также используется для удаления ключей
     из ssh-agent и для запроса ключей, которые содержатся в одном.

     Возможны следующие варианты:
@table @asis
@item     -a bind_address @anchor{man_ssh_agent -a bind_address}
             Привязать агент к сокету UNIX-домена bind_address. По умолчанию
             используется $TMPDIR/ssh-XXXXXXXXXX/agent.<ppid>.

@item     -c @anchor{man_ssh_agent -c}
             Генерируйте команды C-shell на stdout. Это значение по умолчанию,
             если SHELL выглядит как оболочка стиля csh.

@item     -D @anchor{man_ssh_agent -D}
             Режим переднего плана. Если указан этот параметр, ssh-agent не будет
             выполнять ветвление.

@item     -d @anchor{man_ssh_agent d}
             Режим отладки. Когда указана эта опция, ssh-agent не будет разветвляться
             и записывает отладочную информацию в стандартную ошибку.

@item     -E fingerprint_hash @anchor{man_ssh_agent -E fingerprint_hash}
             Определяет алгоритм хеширования, используемый при отображении отпечатков
             клавиш. Допустимые варианты: «md5» и «sha256». По умолчанию это «sha256».

@item     -k @anchor{man_ssh_agent -k}
             Убить текущего агента (заданного переменной окружения SSH_AGENT_PID).

@item     -P @anchor{man_ssh_agent -P}
             Укажите шаблонный список допустимых путей для разделяемых библиотек PKCS#11,
             которые можно добавить с помощью опции -s в ssh-add (1). По умолчанию
             разрешена загрузка библиотек PKCS#11 из “/usr/lib/*,/usr/local/lib/*”.
             Библиотеки PKCS#11, которые не соответствуют белому списку, будут отклонены.
             Смотри PATTERNS в ssh_config(5) для описания синтаксиса списка шаблонов.

@item     -s @anchor{man_ssh_agent -s}
             Генерация команд оболочки Bourne на стандартный вывод. Это значение по
             умолчанию, если SHELL не выглядит как оболочка в стиле csh.

@item     -t life @anchor{man_ssh_agent -t life}
             Задайте значение по умолчанию для максимального времени жизни идентификаторов,
             добавляемых к агенту. Время жизни может быть указано в секундах или в формате
             времени, указанном в sshd_config (5). Время жизни, указанное для
             идентификатора с помощью ssh-add (1), переопределяет это значение. Без
             этой опции максимальное время жизни по умолчанию - навсегда.
@end table
     Если указана командная строка, она выполняется как подпроцесс агента. Когда команда
     умирает, агент тоже.

     Идея заключается в том, что агент запускается на локальном ПК пользователя,
     ноутбуке или терминале. Данные аутентификации не нужно хранить на каком-либо другом
     компьютере, и пароли аутентификации никогда не передаются по сети. Однако соединение
     с агентом пересылается через удаленные входы SSH, и пользователь может, таким образом,
     безопасно использовать привилегии, заданные удостоверениями в любом месте сети.

     Существует два основных способа настройки агента: во-первых, агент запускает новую
     подкоманду, в которую экспортируются некоторые переменные среды, например, ssh-agent
     xterm &. Во-вторых, агент печатает необходимые команды оболочки (можно сгенерировать
     синтаксис sh(1) или csh(1)), которые можно оценить в вызывающей оболочке, например,
     eval `ssh-agent -s` для оболочек типа Борна, таких как sh(1) или ksh(1) и
     eval `ssh-agent -c` для csh(1) и производных.

     Позже ssh(1) просматривает эти переменные и использует их для установления
     соединения с агентом.

     Агент никогда не отправит закрытый ключ по каналу запроса. Вместо этого агент будет
     выполнять операции, для которых требуется закрытый ключ, а результат будет возвращен
     запрашивающей стороне. Таким образом, частные ключи не предоставляются клиентам,
     использующим агент.

     Создается сокет домена UNIX, и имя этого сокета сохраняется в переменной среды
     SSH_AUTH_SOCK. Сокет доступен только для текущего пользователя. Этот метод легко
     используется пользователем root или другим экземпляром того же пользователя.

     Переменная окружения SSH_AGENT_PID содержит процесс агента ID.

     Агент завершается автоматически, когда команда, заданная в командной строке,
     завершается.

     В Debian ssh-agent устанавливается с установленным битом set-group-id, чтобы
     предотвратить атаки ptrace(2) при получении материала с закрытым ключом. Это имеет
     побочный эффект, так как компоновщик во время выполнения удаляет определенные
     переменные среды, которые могут иметь последствия для безопасности для программ с
     заданным идентификатором, включая LD_PRELOAD, LD_LIBRARY_PATH, и TMPDIR. Если вам
     нужно установить любую из этих переменных среды, вам нужно будет сделать это в
     программе, выполняемой ssh-agent.

@item FILES
     $TMPDIR/ssh-XXXXXXXXXX/agent.<ppid>
             Сокеты домена UNIX, используемые для подключения к агенту аутентификации.
             Эти розетки должны быть доступны для чтения только владельцу. Сокеты должны
             автоматически удаляться при выходе из агента.

@item SEE ALSO
     ssh(1), ssh-add(1), ssh-keygen(1), sshd(8)

@item AUTHORS
     OpenSSH is a derivative of the original and free ssh 1.2.12 release by
     Tatu Ylonen.  Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos, Theo
     de Raadt and Dug Song removed many bugs, re-added newer features and cre‐
     ated OpenSSH.  Markus Friedl contributed the support for SSH protocol
     versions 1.5 and 2.0.

BSD                            November 30, 2016                           BSD
@end table
